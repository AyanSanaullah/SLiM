#!/bin/bash

echo "üöÄ Iniciando ShellHacks Agents Services"
echo "======================================"

# Verificar se estamos no diret√≥rio correto
if [ ! -f "app.py" ]; then
    echo "‚ùå Execute este script no diret√≥rio agents/"
    exit 1
fi

# Parar servi√ßos existentes
echo "üõë Parando servi√ßos existentes..."
killall Python 2>/dev/null || true
sleep 2

# Iniciar string-comparison service
echo "üî§ Iniciando String Comparison Service..."
if [ -d "../string-comparison" ]; then
    cd ../string-comparison
    if [ -f "backend.py" ]; then
        echo "   Iniciando em http://localhost:8000"
        python3 backend.py &
        STRING_PID=$!
        cd ../agents
        sleep 3
        
        # Verificar se iniciou
        if curl -s http://localhost:8000/health > /dev/null; then
            echo "   ‚úÖ String Comparison Service online"
        else
            echo "   ‚ö†Ô∏è  String Comparison Service com problemas"
        fi
    else
        echo "   ‚ùå backend.py n√£o encontrado em string-comparison/"
    fi
else
    echo "   ‚ö†Ô∏è  Diret√≥rio string-comparison n√£o encontrado"
fi

# Iniciar agents service
echo "ü§ñ Iniciando Agents Service..."
echo "   Iniciando em http://localhost:8080"
python3 app.py &
AGENTS_PID=$!
sleep 5

# Verificar se iniciou
if curl -s http://localhost:8080/health > /dev/null; then
    echo "   ‚úÖ Agents Service online"
else
    echo "   ‚ùå Agents Service falhou ao iniciar"
    exit 1
fi

echo ""
echo "üéâ Servi√ßos iniciados com sucesso!"
echo "================================="
echo "ü§ñ Agents Service:        http://localhost:8080"
echo "üî§ String Comparison:     http://localhost:8000"
echo ""
echo "üìã Comandos √∫teis:"
echo "   Ver status:             python3 help.py --services"
echo "   Menu interativo:        python3 help.py --interactive"
echo "   Teste autom√°tico:       python3 test_advanced_system.py"
echo "   Parar servi√ßos:         killall Python"
echo ""
echo "üìö Documenta√ß√£o:"
echo "   Comandos completos:     cat COMANDOS_COMPLETOS.md"
echo "   Comandos r√°pidos:       cat COMANDOS_RAPIDOS.md"
echo "   Ajuda:                  python3 help.py"
echo ""

# Manter o script rodando para mostrar logs
echo "üìä Logs dos servi√ßos (Ctrl+C para parar):"
echo "=========================================="

# Fun√ß√£o para cleanup quando o script for interrompido
cleanup() {
    echo ""
    echo "üõë Parando servi√ßos..."
    kill $AGENTS_PID 2>/dev/null || true
    kill $STRING_PID 2>/dev/null || true
    killall Python 2>/dev/null || true
    echo "‚úÖ Servi√ßos parados"
    exit 0
}

# Configurar trap para cleanup
trap cleanup SIGINT SIGTERM

# Aguardar indefinidamente (os servi√ßos rodando em background)
wait
